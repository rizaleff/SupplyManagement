// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(SupplyManagementDbContext))]
    [Migration("20231230083126_removeEndDate")]
    partial class removeEndDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("password");

                    b.Property<Guid>("RoleGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("role_guid");

                    b.HasKey("Guid");

                    b.HasIndex("RoleGuid");

                    b.ToTable("tb_m_accounts");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("2304121e-7664-4d08-9dc2-728f627d60a4"),
                            Password = "$2a$12$UkZaBzj9DQWfhLZXxcMXjurlNhUgd1coZ8gRZzfeBpW0jQZCQN8xS",
                            RoleGuid = new Guid("018a38ea-2797-4a58-833d-e2fc9f7c39ac")
                        },
                        new
                        {
                            Guid = new Guid("c203b5ac-fc4c-4472-bf37-d1d68a71390b"),
                            Password = "$2a$12$7q3naxSlzBUBJ5iFWL45HeXehhZdBEE0tp.b5DY.4HdS2gUtFsQy2",
                            RoleGuid = new Guid("bd373ba1-d60b-461b-992f-4b5e2b3366a9")
                        });
                });

            modelBuilder.Entity("API.Models.Company", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<Guid>("AccountGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_Guid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("address");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int")
                        .HasColumnName("approval_status");

                    b.Property<string>("CompanyLogo")
                        .HasColumnType("longtext")
                        .HasColumnName("company_logo");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("Guid");

                    b.HasIndex("AccountGuid")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tb_m_companies");
                });

            modelBuilder.Entity("API.Models.Employee", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<Guid>("AccountGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("nik")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("nik");

                    b.HasKey("Guid");

                    b.HasIndex("AccountGuid")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tb_m_employees");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("f0ec7bcb-eeea-46dc-b9e3-31d6fe508f9b"),
                            AccountGuid = new Guid("2304121e-7664-4d08-9dc2-728f627d60a4"),
                            Email = "jennie@gmail.com",
                            FirstName = "Jennie",
                            Gender = 1,
                            LastName = "Jane",
                            nik = "119119"
                        },
                        new
                        {
                            Guid = new Guid("506cbf10-7388-4c4c-abc6-012a11417d8c"),
                            AccountGuid = new Guid("c203b5ac-fc4c-4472-bf37-d1d68a71390b"),
                            Email = "chris@gmail.com",
                            FirstName = "Chris",
                            Gender = 0,
                            LastName = "Martin",
                            nik = "119120"
                        });
                });

            modelBuilder.Entity("API.Models.ProjectTender", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<int>("ProjectStatus")
                        .HasColumnType("int")
                        .HasColumnName("project_status");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.HasKey("Guid");

                    b.ToTable("tb_project_tenders");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasColumnName("name");

                    b.HasKey("Guid");

                    b.ToTable("tb_m_roles");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("018a38ea-2797-4a58-833d-e2fc9f7c39ac"),
                            Name = "Admin"
                        },
                        new
                        {
                            Guid = new Guid("bd373ba1-d60b-461b-992f-4b5e2b3366a9"),
                            Name = "Manager"
                        },
                        new
                        {
                            Guid = new Guid("b2c86b5e-965d-4715-bd72-48a39fa41cc8"),
                            Name = "VendorCompany"
                        });
                });

            modelBuilder.Entity("API.Models.Vendor", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int")
                        .HasColumnName("approval_status");

                    b.Property<string>("CompanyField")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("company_field");

                    b.Property<string>("CompanyType")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("company_type");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.HasKey("Guid");

                    b.ToTable("tb_m_vendors");
                });

            modelBuilder.Entity("API.Models.VendorOffer", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<float>("OfferPrice")
                        .HasColumnType("float")
                        .HasColumnName("offer_price");

                    b.Property<int>("OfferStatus")
                        .HasColumnType("int")
                        .HasColumnName("offer_status");

                    b.Property<Guid>("ProjectTenderGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("project_tender_guid");

                    b.Property<Guid>("VendorGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("vendor_guid");

                    b.HasKey("Guid");

                    b.HasIndex("ProjectTenderGuid");

                    b.HasIndex("VendorGuid");

                    b.ToTable("tb_vendor_offers");
                });

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.HasOne("API.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("API.Models.Company", b =>
                {
                    b.HasOne("API.Models.Account", "Account")
                        .WithOne("Company")
                        .HasForeignKey("API.Models.Company", "AccountGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("API.Models.Employee", b =>
                {
                    b.HasOne("API.Models.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("API.Models.Employee", "AccountGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("API.Models.Vendor", b =>
                {
                    b.HasOne("API.Models.Company", "Company")
                        .WithOne("Vendor")
                        .HasForeignKey("API.Models.Vendor", "Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("API.Models.VendorOffer", b =>
                {
                    b.HasOne("API.Models.ProjectTender", "ProjectTender")
                        .WithMany("VendorOffers")
                        .HasForeignKey("ProjectTenderGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Vendor", "Vendor")
                        .WithMany("VendorOffers")
                        .HasForeignKey("VendorGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectTender");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("API.Models.Company", b =>
                {
                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("API.Models.ProjectTender", b =>
                {
                    b.Navigation("VendorOffers");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("API.Models.Vendor", b =>
                {
                    b.Navigation("VendorOffers");
                });
#pragma warning restore 612, 618
        }
    }
}
