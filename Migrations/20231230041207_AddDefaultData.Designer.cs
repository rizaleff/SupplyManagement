// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(SupplyManagementDbContext))]
    [Migration("20231230041207_AddDefaultData")]
    partial class AddDefaultData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("password");

                    b.Property<Guid>("RoleGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("role_guid");

                    b.HasKey("Guid");

                    b.HasIndex("RoleGuid");

                    b.ToTable("tb_m_accounts");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("bd6faa26-42a4-4a5b-a331-780115599296"),
                            Password = "$2a$12$OBhEFaX69Dneu5BbmEuOhuoxb.nnaAaiX5Yl3QFdFM67gTkliDUQC",
                            RoleGuid = new Guid("bbae1463-395e-41fb-bcb6-720ff4192a72")
                        },
                        new
                        {
                            Guid = new Guid("5eec4a8f-4d50-4636-a62e-d89a0616313f"),
                            Password = "$2a$12$lIunYR/bj0nP/VNwELpWveQNQqFIHCLN3Aan4fn47J19UlKu721ky",
                            RoleGuid = new Guid("7aa6a63d-11b3-44d8-ba58-76934773958a")
                        });
                });

            modelBuilder.Entity("API.Models.Company", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<Guid>("AccountGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_Guid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("address");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int")
                        .HasColumnName("approval_status");

                    b.Property<string>("CompanyLogo")
                        .HasColumnType("longtext")
                        .HasColumnName("company_logo");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("Guid");

                    b.HasIndex("AccountGuid")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tb_m_companies");
                });

            modelBuilder.Entity("API.Models.Employee", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<Guid>("AccountGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("nik")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("nik");

                    b.HasKey("Guid");

                    b.HasIndex("AccountGuid")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tb_m_employees");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("1c11e24f-ce2d-4175-a5d9-005097f08d0f"),
                            AccountGuid = new Guid("bd6faa26-42a4-4a5b-a331-780115599296"),
                            Email = "jennie@gmail.com",
                            FirstName = "Jennie",
                            Gender = 1,
                            LastName = "Jane",
                            nik = "119119"
                        },
                        new
                        {
                            Guid = new Guid("2da7058c-8e3f-478e-b619-c8ee5f49de5f"),
                            AccountGuid = new Guid("5eec4a8f-4d50-4636-a62e-d89a0616313f"),
                            Email = "chris@gmail.com",
                            FirstName = "Chris",
                            Gender = 0,
                            LastName = "Martin",
                            nik = "119120"
                        });
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasColumnName("name");

                    b.HasKey("Guid");

                    b.ToTable("tb_m_roles");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("bbae1463-395e-41fb-bcb6-720ff4192a72"),
                            Name = "Admin"
                        },
                        new
                        {
                            Guid = new Guid("7aa6a63d-11b3-44d8-ba58-76934773958a"),
                            Name = "Manager"
                        },
                        new
                        {
                            Guid = new Guid("70b6c06d-d671-43c3-a412-d672b55e6e36"),
                            Name = "VendorCompany"
                        });
                });

            modelBuilder.Entity("API.Models.Vendor", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int")
                        .HasColumnName("approval_status");

                    b.Property<string>("CompanyField")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("company_field");

                    b.Property<string>("CompanyType")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("company_type");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.HasKey("Guid");

                    b.ToTable("tb_m_vendors");
                });

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.HasOne("API.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("API.Models.Company", b =>
                {
                    b.HasOne("API.Models.Account", "Account")
                        .WithOne("Company")
                        .HasForeignKey("API.Models.Company", "AccountGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Vendor", "Vendor")
                        .WithOne("Company")
                        .HasForeignKey("API.Models.Company", "Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("API.Models.Employee", b =>
                {
                    b.HasOne("API.Models.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("API.Models.Employee", "AccountGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("API.Models.Vendor", b =>
                {
                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
