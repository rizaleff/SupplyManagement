// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(SupplyManagementDbContext))]
    [Migration("20231230043011_fixRelasi")]
    partial class fixRelasi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("password");

                    b.Property<Guid>("RoleGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("role_guid");

                    b.HasKey("Guid");

                    b.HasIndex("RoleGuid");

                    b.ToTable("tb_m_accounts");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("570cd95e-4bc8-404e-a3f0-c1f84a0f3a44"),
                            Password = "$2a$12$2SDVGI76H1dUd1.daZwi9OkOkkdsQLR1zvlOVX7nR6AY7mw06bc5C",
                            RoleGuid = new Guid("6c4ace98-b04e-4ec3-b25b-28c39c7364d1")
                        },
                        new
                        {
                            Guid = new Guid("00e41f63-019e-4965-bd9f-169d8d9f2515"),
                            Password = "$2a$12$DrEfZrw4CsGvsTu.fuHgq.zS9EVMf6WHSglszkVBILHu61VmbyXym",
                            RoleGuid = new Guid("39d880f7-076c-4ccd-bbd1-7d795278594f")
                        });
                });

            modelBuilder.Entity("API.Models.Company", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<Guid>("AccountGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_Guid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("address");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int")
                        .HasColumnName("approval_status");

                    b.Property<string>("CompanyLogo")
                        .HasColumnType("longtext")
                        .HasColumnName("company_logo");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("Guid");

                    b.HasIndex("AccountGuid")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tb_m_companies");
                });

            modelBuilder.Entity("API.Models.Employee", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<Guid>("AccountGuid")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("first_name");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("nik")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("nik");

                    b.HasKey("Guid");

                    b.HasIndex("AccountGuid")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("tb_m_employees");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("f60f1a60-990c-4131-ae92-b95c31331bdb"),
                            AccountGuid = new Guid("570cd95e-4bc8-404e-a3f0-c1f84a0f3a44"),
                            Email = "jennie@gmail.com",
                            FirstName = "Jennie",
                            Gender = 1,
                            LastName = "Jane",
                            nik = "119119"
                        },
                        new
                        {
                            Guid = new Guid("8bd7d069-d991-4529-b232-d56f557d85d0"),
                            AccountGuid = new Guid("00e41f63-019e-4965-bd9f-169d8d9f2515"),
                            Email = "chris@gmail.com",
                            FirstName = "Chris",
                            Gender = 0,
                            LastName = "Martin",
                            nik = "119120"
                        });
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasColumnName("name");

                    b.HasKey("Guid");

                    b.ToTable("tb_m_roles");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("6c4ace98-b04e-4ec3-b25b-28c39c7364d1"),
                            Name = "Admin"
                        },
                        new
                        {
                            Guid = new Guid("39d880f7-076c-4ccd-bbd1-7d795278594f"),
                            Name = "Manager"
                        },
                        new
                        {
                            Guid = new Guid("6c9842d1-0f7b-4c9f-af79-b47b278836fc"),
                            Name = "VendorCompany"
                        });
                });

            modelBuilder.Entity("API.Models.Vendor", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)")
                        .HasColumnName("guid");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int")
                        .HasColumnName("approval_status");

                    b.Property<string>("CompanyField")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("company_field");

                    b.Property<string>("CompanyType")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("company_type");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_date");

                    b.HasKey("Guid");

                    b.ToTable("tb_m_vendors");
                });

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.HasOne("API.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("API.Models.Company", b =>
                {
                    b.HasOne("API.Models.Account", "Account")
                        .WithOne("Company")
                        .HasForeignKey("API.Models.Company", "AccountGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("API.Models.Employee", b =>
                {
                    b.HasOne("API.Models.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("API.Models.Employee", "AccountGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("API.Models.Vendor", b =>
                {
                    b.HasOne("API.Models.Company", "Company")
                        .WithOne("Vendor")
                        .HasForeignKey("API.Models.Vendor", "Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("API.Models.Account", b =>
                {
                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("API.Models.Company", b =>
                {
                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("API.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
